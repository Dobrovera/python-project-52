from django.contrib.auth.forms import AuthenticationFormfrom django.contrib.auth.models import Userfrom django.shortcuts import render, get_object_or_404, redirectfrom django.utils.translation import gettextfrom django.views.decorators.http import require_http_methodsfrom django.views import Viewfrom django.contrib import messagesfrom django.contrib.auth import authenticate, login, logoutfrom task_manager.views import indexfrom .forms import SignUpFormclass UserList(View):    def get(self, request, *args, **kwargs):        users = User.objects.all()        return render(request, 'users/users.html', context={            'users': users,        })class UpdateUser(View):    def get(self, request, *args, **kwargs):        users = get_object_or_404(User, id=kwargs['id'])        return render(request, 'update.html', context={            'users': users,        })@require_http_methods(["GET", "POST"])def logout_view(request):    logout(request)    return redirect(index)class SignUpView(View):    def get(self, request):        form = SignUpForm()        return render(request, "users/create.html", {"form": form})    def post(self, request):        form = SignUpForm(request.POST)        if form.is_valid():            form.save()            messages.success(request, gettext("User successfully registered"))            return redirect('/login')        return render(request, "users/create.html", {"form": form})class LoginView(View):    def get(self, request):        form = AuthenticationForm()        return render(request, 'login.html', {'form': form})    def post(self, request):        form = AuthenticationForm(request, data=request.POST)        if form.is_valid():            user_data = form.cleaned_data            user = authenticate(username=user_data.get("username"), password=user_data.get("password"))            if user is not None and user.is_active:                login(request, user)                messages.add_message(request, messages.SUCCESS, gettext('You are logged in'))                return redirect(index)        messages.add_message(request, messages.ERROR, gettext('Please enter the correct username and password. '                                                              'Both fields can be case sensitive.'))        return render(request, "login.html", {"form": form})